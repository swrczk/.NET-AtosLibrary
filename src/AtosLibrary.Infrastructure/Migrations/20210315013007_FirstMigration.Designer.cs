// <auto-generated />
using System;
using AtosLibrary.Infrastructure.SQLDataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AtosLibrary.Infrastructure.Migrations
{
    [DbContext(typeof(AtosLibraryContext))]
    [Migration("20210315013007_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.BookItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookItemStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("BookItems");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.ReaderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Readers");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.ReservationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateBeginOfReservation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateEndOfReservation")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookItemId");

                    b.HasIndex("ReaderId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.BookItemEntity", b =>
                {
                    b.HasOne("AtosLibrary.Infrastructure.Entities.BookEntity", "Book")
                        .WithMany("BookItems")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.ReservationEntity", b =>
                {
                    b.HasOne("AtosLibrary.Infrastructure.Entities.BookItemEntity", "BookItem")
                        .WithMany("ReservationEntities")
                        .HasForeignKey("BookItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtosLibrary.Infrastructure.Entities.ReaderEntity", "Reader")
                        .WithMany("ReservationEntities")
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookItem");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.BookEntity", b =>
                {
                    b.Navigation("BookItems");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.BookItemEntity", b =>
                {
                    b.Navigation("ReservationEntities");
                });

            modelBuilder.Entity("AtosLibrary.Infrastructure.Entities.ReaderEntity", b =>
                {
                    b.Navigation("ReservationEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
